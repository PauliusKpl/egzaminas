{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport axios from 'axios';\nimport './header.css';\nconst [result, setResult] = [];\n\nfunction Test() {\n  _s();\n\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/search?query=grd').then(res => {\n      res.data.map(coin => {\n        setResult(coin.name);\n      });\n    }).catch(error => console.log(error));\n  }, []);\n}\n\n_s(Test, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/TheEm/OneDrive/Desktop/egzaminas/my-app/src/components/Test.js"],"names":["React","Component","useEffect","useState","Slider","axios","result","setResult","Test","get","then","res","data","map","coin","name","catch","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAEA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAuB,EAA7B;;AAEA,SAASC,IAAT,GAAe;AAAA;;AACXN,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CACJI,GADD,CACK,mDADL,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXA,MAAAA,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAI;AAACP,QAAAA,SAAS,CAACO,IAAI,CAACC,IAAN,CAAT;AAAqB,OAA3C,CAAD;AAEA,KALH,EAMGC,KANH,CAMSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANlB;AAQC,GATI,EASF,EATE,CAAT;AAWH;;GAZQT,I;;KAAAA,I;AAeT,eAAeA,IAAf","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport axios from 'axios';\r\nimport './header.css'\r\n\r\nconst [result, setResult] = ([])\r\n\r\nfunction Test(){\r\n    useEffect(() => {\r\n        axios\r\n        .get('https://api.coingecko.com/api/v3/search?query=grd')\r\n          .then(res => {\r\n           (res.data.map(coin => {setResult(coin.name)}))\r\n           \r\n          })\r\n          .catch(error => console.log(error));\r\n    \r\n        }, []);\r\n\r\n}\r\n\r\n  \r\nexport default Test\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}